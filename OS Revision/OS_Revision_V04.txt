Memory Management :
    CPU can directly access only registers, cache and Main memory.
    CASE 1 : Consider one process requires 4MB memory size and main memory size as 4MB.
        CPU Utilization = 1-p where p is the fraction of 'p' time doing I/O = 20%
    CASE 2: If MM = 16MB, 4 processes can be hold in MM. CPU Utilization = 1-(p^4) = 60%
    CASE 3: If MM = 32MB, 8 processes can be hold in MM. CPU Utilization = 1-(p^8) = 83%

    Therefore with increase in MM, the degree of multiprogramming also increases results in maximum CPU Utilization.

Compilation Process:

    Refer Screenshots

    Header - Pointers to each segment in object code.
    Text and Data segment - Holds the data and code.
    Relocation Info - Whenever a program is written we give each instruction line number starting from 0 since we don't know where
                      we are going to load our program in main memory. These addresses are called as relocatable addresses.
                      After loading the program in main memory (like location 1000), then address will be 1000+0,1000+1,1000+3...
                      The converted address is called as absolute addresses.

    Compile Time Binding - If we know the absolute address while compilation.
    Run Time Binding - If we know the absolute address only at run time.

    Symbol Table - Used to resolve the keywords and functions present in the program.
    
    Linker : It takes II phases
            The role of Linker is to perform two operation:
                    1.Relocation        2. Symbol Resolution
            The generated object code may contain reference to external libraries. (Like package file,shared file)
            The Linker resolve all these mapping and provide new relocatable address to the object code.
            In this case too some entries in symbol table are not resolved like shared libraries. Because if we load these files now someother process may also
            wants the same code in that program. This makes wastage of space in main memory. Thus, it uses stub or glue code which tells OS on execution to search the main memory
            and look for the code whether some other process is using the code. This is also called as dynamic linking. Only OS should search main memory because no process should access other memory regions.

    Loader :
            It will do three operations:
                1.Program Loading  2.Relocation  3.Symbol Resolution
            Loader will load the program in the main memory.
            Relocation here is from relocatable address to absolute addresses.
            All the unresolved symbol table entries also resolved here.

            Refer Screenshots for more clarity.

Contiguous Memory Allocation:

    Example : One cake is there where the cake is split into equal sizes and distributed for each person (Fixed Partitioning)
              In contrary, if the knife is given to each people to cut how much they need (Variable Partitioning)
              Cake in fixed size may be wasted by some people if he/she is in diet. (Internal Fragmentation)

    --->Fixed Partitioning (Static) - Main Memory is split up into various partitions of fixed sizes.
        Limitations in FP:
            1. Internal Fragmentation - If we allocate a process of 1MB in a fixed partition of 2MB, the remaining 1MB wastage is called IF.
            2. Process Size Limitation - If the maximum partiton size is 10MB, then process size above 10mB cannot be placed in this main memory.
            3. External Fragmentation - Suppose 1MB available in each partiton, (in total 4MB free space) If we try to load a process of 4MB, we cannot load the process.
            4. Degree of multiprogramming - DOP is limited.
    
    Whenever we ask loader to perform relocation, the problem arises when the process is swapped out from the memory and the first process space occupied by some other process.
    When the process returns again, the loader is confused where to load. Thus we use runtime binding by not load time binding.

    Relocation and Protection in H/W:
        Limit Register - The logical address or relocatable address generated by the CPU is compared. (If it is lesser, it means we are accessing only the memory allocated to the process)
        Relocation Register - Contains the base physical address. (This will be added to all relocatable address)

        The above two operations combined called as Memory Management Unit.
        
    --->Dynamic Partitioning (Variable) - Main Memory is not split up into various partitions.

            Here there is no Internal Fragmentation but it has External Fragmentation.

            Compaction (or) Defragmentation - Method in which rejoining all the holes in the main memory into single partitions.

        Advantages: 1. degree of multiprogramming is dynamic.  2. Size is not fixed in dynamic partitions.

        Data Structures used are 1. Bitmap 2. Linked List

            1. BitMap - The entire memory is represented in the form of small allocation unit in an one dimensional array.
                        The 0's represent Free memory and 1's represent Occupied memory.
                        The major disadvantage is that this table also consume some memory and there is no way we can tell whether a memory is half filled or fully filled. (It depends on the size of the granularity that we choose)

            2. Linked List - In this Method nodes are created for each process and on simulation we found that linked list consumes less space than bitmap.
                             Each node will have p/h,start address and end address.
                             If a process free up, we can merge the nodes easily in case of DLL.
                Advantages : Increasing orderof start address.

                Algorithms that are used to allocate and deallocate the process.
                    1. First Fit - The first free space that can fit the process is allocated. (Efficient among all)
                    2. Next Fit - The search will start from the first fit allocated space.
                    3. Best Fit - Search entire list and finds the smallest hole to allocate the process.
                    4. Worst Fit - Search entire list and finds the largest hole to allocate the process.
                    5. Quick Fit - Separate lists are created for holes of same size so that in order to allocate we can travel the required list only.  
        
        Overlays - The part of the process is kept in the main memory rather than keeping the entire process in main memory.
                   Here the Overlay process has to be maintained by the user(User has to write program to manage the overlay)

Non-Contiguous Memory Allocation :

    Further divided into two methods:
            1.Paging    2. Segmentation

    The process is broken down into various pages and main memory is broken down into frames.
    Frame size = Page size.
    We can load any page in any frame we want.
    The CPU generates logical address which in turn converted into physical address with the help of MMU. (Previously in contiguous we used limit and base register but here process resides in main memory is not contiguous)
    
    The conversion of logical address to physical address is done by MMU with the help of Page Table.
    Consider each frame is of size 4B and Main Memory size as 64B.
    Then number of frames will be 16 frames. 
    Each page will be of size 4Bytes since frame size is 4MB and Each process size as 16Bytes.
    
    CPU generates logical address which comprises of offset and page table entry. With the help of this we can find the frame number and offset is used to find required frame and byte in main memory.

    Refer Screenshots for better understanding.

    Physical Address space - Size of Main Memory
    Logical Address space - Size of process.
    Represent each of them in terms of words first.
    Refer screenshots for more clarity.


    Virtual Memory - If the process size is bigger than main memory size, we will load only some part / page in the main memory by keeping other pages in the secondary memory.
                     This method is firstly applied for bigger processes only but then now every process is done like this so that degree of multiprogramming can be improved better.

    Virtual address = Logical Address

    Refer Screenshot for conversion process.

    Apart from page frame number , there are number of bits used which varies from OS to OS.

        1. Caching Disabled - To disable Caching up of pages.
        2. Reference Bit - To know how frequent the page is referred.
        3. Dirty or Modified Bit - To check whether page is Modified or not.
        4. Protection - Read,write,execute Protection
        5. Present/ Absent bit
    
    PTBR - Page Table Base Register (The address where page table is located in main memory.)

    Demand Paging - Initially every process has some locality of reference (i.e certain pages needed to be loaded - Working set), those pages are loaded but then if we need more pages we demand for those pages.

    